<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tonytonypeng</title>
  
  <subtitle>For Python</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-06T09:24:50.625Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>LiZhanPeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python</title>
    <link href="http://yoursite.com/2017/10/08/hello%20world/"/>
    <id>http://yoursite.com/2017/10/08/hello world/</id>
    <published>2017-10-08T08:11:49.167Z</published>
    <updated>2017-11-06T09:24:50.625Z</updated>
    
    <content type="html"><![CDATA[<p>代码规则为开放封闭的原则。</p><h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><ul><li><p>配置Django虚拟环境(Linux下)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">*1.虚拟环境下载（联网）</div><div class="line">sudo pip install virtualenv</div><div class="line">sudo pip install virtualenvwrapper</div><div class="line"></div><div class="line">*2.指定工作环境，这里指定为py3</div><div class="line">mkvirtualenv -p /usr/bin/python3 py3_django</div><div class="line"></div><div class="line">3．查看与切换</div><div class="line">workon 两次tab键</div><div class="line">workon 虚拟环境名称</div><div class="line"></div><div class="line">4.删除</div><div class="line">rmvirtualenv 虚拟环境名称</div><div class="line"></div><div class="line">*5.安装django包（联网下载）</div><div class="line">pip install django==1.8.2</div><div class="line"></div><div class="line">6.退出</div><div class="line">deactivate</div></pre></td></tr></table></figure></li><li><p>git<br><img src="https://github.com/tonytonypeng/One/raw/master/splots/git.png" alt="git"></p></li><li>虚拟机无法进入桌面<br><img src="https://github.com/tonytonypeng/One/raw/master/splots/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E6%A1%8C%E9%9D%A2.png" alt="虚拟机无法进入桌面"></li><li>关联查询<br><img src="https://github.com/tonytonypeng/One/raw/master/splots/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2.png" alt="关联查询"></li><li>CheckBox：post时只有被选中(‘checked’=checked)的才会被提交。</li><li>django model中通过调用aggregate过滤器来调用Avg，Count，Max，Min，Sum，但count一般不用。</li><li>HttpRequest对象由Django创建，HttpResponse对象由开发人员创建。</li><li><p>session三种存储方式，有键，值，过期时间，依赖于cookie，键与cookie存储的sessionid一样，这样就会根据这个sessionid找出这个请求者的Session值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">存储在数据库中，默认存储方式，不写也可。</div><div class="line">SESSION_ENGINE=&apos;django.contrib.sessions.backends.db&apos;</div><div class="line"></div><div class="line">存储在缓存中：存储在本机内存中，如果丢失则不能找回，比数据库的方式读写更快</div><div class="line">SESSION_ENGINE=&apos;django.contrib.sessions.backends.cache&apos;</div><div class="line"></div><div class="line">混合存储：优先从本机内存中存取，如果没有则从数据库中存取</div><div class="line">SESSION_ENGINE=&apos;django.contrib.sessions.backends.cached_db&apos;</div><div class="line"></div><div class="line">以键值对的格式写会话</div><div class="line">request.session[&apos;键&apos;]=值</div><div class="line"></div><div class="line">根据键读取值</div><div class="line">request.session.get(&apos;键&apos;,默认值)</div></pre></td></tr></table></figure></li><li><p>可迭代对象的本质就是可以向我们提供一个迭代器(通过<strong>iter</strong>方法提供)帮助我们对其进行迭代遍历使用，也就是说，一个具备了<strong>iter</strong>方法的对象，<br>就是一个可迭代对象,可以通过iter()函数获取这些可迭代对象的迭代器。然后我们可以对获取到的迭代器不断使用next()函数来获取下一条数据。</p></li><li>restful核心：get方式–&gt;获取,post–&gt;新建,put–&gt;修改,del–&gt;删除</li><li>装饰器用语法糖@对原有代码F进行封装，从而进行功能的拓展。程序遇到@outer会自动执行(即调用outer(F))，这时outer函数会将原有函数名F当作参数传递给inner函数，inner函数里面就有需要拓展的功能代码，最终inner函数名会作为结果return，就是inner函数变成新的F函数，这里注意的是inner函数并没有执行，只是被引用了，只有当inner函数即新的F函数被调用的时候才会执行(比如程序调用原函数)。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码规则为开放封闭的原则。&lt;/p&gt;
&lt;h3 id=&quot;随笔&quot;&gt;&lt;a href=&quot;#随笔&quot; class=&quot;headerlink&quot; title=&quot;随笔&quot;&gt;&lt;/a&gt;随笔&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置Django虚拟环境(Linux下)&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
  </entry>
  
</feed>
